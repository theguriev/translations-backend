version: "3"

networks:
  backend:

services:
  gateway:
    build:
      context: .
      dockerfile: ./services/gateway/Dockerfile
    working_dir: /app/services/gateway
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./services/gateway:/app/services/gateway
      # - /app/node_modules
      # - /app/services/gateway/node_modules
    expose:
      - "3000"
    ports:
      - "3000:3000"
    restart: always
    networks:
      - backend
  authorization:
    build:
      context: .
      dockerfile: ./services/authorization/Dockerfile
    working_dir: /app/services/authorization
    environment:
      - NODE_ENV=development
    volumes:
      - ./services/authorization:/app/services/authorization
    restart: always
    networks:
      - backend

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   logging:
  #     driver: none
  #   networks:
  #     - retro

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #   depends_on:
  #     - mongo
  #   logging:
  #     driver: none
  #   networks:
  #     - retro
  # users:
  #   build:
  #     context: .
  #     dockerfile: ./services/users/Dockerfile
  #   working_dir: /app
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3000
  #   volumes:
  #     - ./services/users:/app/services/users
  #     - /app/node_modules
  #     - /app/services/users/node_modules
  #   restart: always
  #   depends_on:
  #     - mongo
  #   networks:
  #     - retro
  #   logging:
  #     driver: none
  # entities:
  #   build:
  #     context: .
  #     dockerfile: ./services/entities/Dockerfile
  #   working_dir: /app
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3006
  #   volumes:
  #     - ./services/entities:/app/services/entities
  #     - /app/node_modules
  #     - /app/services/entities/node_modules
  #   restart: always
  #   depends_on:
  #     - mongo
  #   networks:
  #     - retro
  #   logging:
  #     driver: none
